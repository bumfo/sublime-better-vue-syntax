%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
name: Better Vue Component
file_extensions:
  - vue
scope: text.html.vue

variables:
  attribute_name: '[a-zA-Z_\-][a-zA-Z0-9_\-]*(?![a-zA-Z0-9_\-])'
  js_identifier: '(?!=[a-zA-Z0-9_$])[a-zA-Z_$][a-zA-Z0-9_$]*(?![a-zA-Z0-9_$])'

contexts:
  
  main:
    - include: tags

  tags:
    - include: custom-tags
    - include: inline-form-tags
    - include: block-any-tags
    - include: style-tags
    - include: vue-template-tags
    - include: scope:text.html.basic

  meta-custom-begin:
    - meta_scope: meta.tag.custom.begin.html
    - match: ''
      pop: true

  meta-inline-form-begin:
    - meta_scope: meta.tag.inline.form.html
    - match: ''
      pop: true

  meta-block-any-begin:
    - meta_scope: meta.tag.block.any.html
    - match: ''
      pop: true

  meta-style-begin:
    - meta_scope: meta.tag.style.begin.html
    - match: ''
      pop: true


  custom-tags:
    - match: '(<)((?:[a-zA-Z_]+(?:-[a-zA-Z_]+)+)\b)'
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.custom.html
      push: [meta-custom-begin, tag-stuff]

  inline-form-tags:
    - match: '(<)((?:button|input)\b)'
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.inline.form.html
      push: [meta-inline-form-begin, tag-stuff]

  block-any-tags:
    - match: '(<)((?:div)\b)'
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.block.any.html
      push: [meta-block-any-begin, tag-stuff]

  style-tags:
    - match: '(<)((?:style)\b)(?=[^>]+\b(?:lang)="scss"[^>]*>)'
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.style.html
      push: [style-end, style-scss-context, meta-style-begin, tag-stuff]

  vue-template-tags:
    - scope: support.function.vue
      match: '\{\{'
      push:
        - scope: variable.other.vue
          match: '{{js_identifier}}'
        - scope: support.function.vue
          match: '\}\}'
          pop: true

  tag-stuff:
    - include: tag-stuff-vue-attributes
    - include: tag-stuff-other-attributes
    - scope: punctuation.definition.tag.end.html
      match: '>'
      pop: true

  tag-stuff-vue-attributes:
    - scope: punctuation.vue
      match: '@'
    - scope: entity.other.attribute-name.html
      match: '(:){{attribute_name}}'
      captures:
        1: punctuation.vue.expr
      push:
        - scope: punctuation.separator.key-value.html
          match: '='
          set:
            - scope: punctuation.definition.string.begin.html
              match: '"'
              set: [end-double-quote, js-expr-double-quoted-content]
              with_prototype:
                - match: '(?=")'
                  pop: true
            - scope: string.unquoted.html
              match: '{{attribute_name}}(?!\s*=)'
              pop: true
            - match: '(?=\S)'
              pop: true
        - match: '(?=\S)'
          pop: true

  js-expr-double-quoted-content:
    - meta_scope: string.quoted.double.html
    - include: js-expr-contents

  end-double-quote:
    - scope: punctuation.definition.string.end.html
      match: '"'
      pop: true

  tag-stuff-other-attributes:
    - scope: entity.other.attribute-name.html
      match: '{{attribute_name}}'
      push:
        - scope: punctuation.separator.key-value.html
          match: '='
          set:
            - scope: punctuation.definition.string.begin.html
              match: '"'
              set:
                - meta_scope: string.quoted.double.html
                - scope: punctuation.definition.string.end.html
                  match: '"'
                  pop: true
            - scope: string.unquoted.html
              match: '{{attribute_name}}(?!\s*=)'
              pop: true
            - match: '(?=\S)'
              pop: true
        - match: '(?=\S)'
          pop: true

  custom-tag-end:
    - scope: meta.tag.custom.end.html
      match: '(</)([^>]*)(>)'
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.custom.html
        3: punctuation.definition.tag.end.html
      pop: true

  style-end:
    - scope: meta.tag.style.end.html
      match: '(</)(style)(>)'
      captures:
        1: punctuation.definition.tag.begin.html
        2: entity.name.tag.style.html
        3: punctuation.definition.tag.end.html
      pop: true

  js-expr-contents:
    - meta_content_scope: source.js.embedded.html
    - include: scope:source.js#expressions

  scss-contents:
    - meta_content_scope: source.scss.embedded.html
    - include: scope:source.scss

  test-js-expr-context:
    - match: ''
      set: js-expr-contents
      with_prototype:
        - match: '(?=</([^>]*)>)'
          pop: true

  style-scss-context:
    - match: ''
      set: scss-contents
      with_prototype:
        - match: '(?=</style>)'
          pop: true

